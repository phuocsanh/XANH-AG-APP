import React, { useEffect } from 'react';
import { Alert } from 'react-native';
import * as Location from 'expo-location';
import { Stack } from 'expo-router';
import QueryProvider from '../src/QueryProvider';
import { setupTerminalLogger } from '../src/utils/terminalLogger';

// Setup terminal logger ƒë·ªÉ hi·ªÉn th·ªã logs trong Metro terminal
setupTerminalLogger();

// Root layout cho to√†n b·ªô ·ª©ng d·ª•ng
export default function RootLayout() {
  useEffect(() => {
    const requestLocationPermission = async () => {
      try {
        console.log('üîç ƒêang xin quy·ªÅn truy c·∫≠p v·ªã tr√≠...');
        
        // Ki·ªÉm tra quy·ªÅn hi·ªán t·∫°i
        const { status: existingStatus } = await Location.getForegroundPermissionsAsync();
        
        if (existingStatus !== 'granted') {
          console.log('üìç Ch∆∞a c√≥ quy·ªÅn v·ªã tr√≠, ƒëang y√™u c·∫ßu...');
          
          // Y√™u c·∫ßu quy·ªÅn v·ªã tr√≠
          const { status } = await Location.requestForegroundPermissionsAsync();
          
          if (status === 'granted') {
            console.log('‚úÖ ƒê√£ c·∫•p quy·ªÅn truy c·∫≠p v·ªã tr√≠');
          } else {
            console.log('‚ùå Ng∆∞·ªùi d√πng t·ª´ ch·ªëi c·∫•p quy·ªÅn v·ªã tr√≠');
            Alert.alert(
              'Quy·ªÅn truy c·∫≠p v·ªã tr√≠',
              '·ª®ng d·ª•ng c·∫ßn quy·ªÅn truy c·∫≠p v·ªã tr√≠ ƒë·ªÉ hi·ªÉn th·ªã th·ªùi ti·∫øt t·∫°i v·ªã tr√≠ hi·ªán t·∫°i c·ªßa b·∫°n.',
              [{ text: 'OK' }]
            );
          }
        } else {
          console.log('‚úÖ ƒê√£ c√≥ quy·ªÅn truy c·∫≠p v·ªã tr√≠');
        }
      } catch (error) {
        console.error('‚ùå L·ªói khi xin quy·ªÅn v·ªã tr√≠:', error);
      }
    };

    requestLocationPermission();
  }, []);

  return (
    <QueryProvider>
      <Stack>
        <Stack.Screen name="(tabs)" options={{ headerShown: false }} />
      </Stack>
    </QueryProvider>
  );
}